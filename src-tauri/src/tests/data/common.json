{
  "appInfo": {
    "name": "Jan-nightly",
    "address": "/Applications/Jan-nightly"
  },
  "import": {
    "downloadQwen3": "https://huggingface.co/Qwen/Qwen3-Embedding-0.6B-GGUF/resolve/main/Qwen3-Embedding-0.6B-Q8_0.gguf?download=true",
    "qwen3": "./data/modelsData/Qwen3-Embedding-0.6B-Q8_0.gguf"
  },
  "adress": {
    "modelsFolder": "./data/modelsData/"
  },
  "modelsHub": {
    "janNanoGguf": "Jan-Nano-Gguf",
    "qwen3": "Qwen3"
  },
  "btnModelHub": {
    "use": "Use",
    "download": "Download"
  },
  "submenu1": {
    "general": "General",
    "appearance": "Appearance",
    "pricivacy": "Pricivacy",
    "modelProviders": "Model Providers",
    "shortcuts": "Shortcuts",
    "mcpServers": "Shortcuts",
    "locaAPIServer": "Local API Server",
    "httpsProxy": "HTTPS Proxy",
    "extensions": "Extensions"
  },
  "modelType": {
    "llama": "Llama.cpp",
    "openAI": "OpenAI"
  },
  "models": {
    "gptv4dot5Preview": "gpt-4.5-preview",
    "qwen3v4b": "qwen3:4b",
    "qwen3v0dot6b": "qwen3:0.6b",
    "qwen3v1dot7b": "qwen3:1.7b",
    "qwen3Embedding": "Qwen3-Embedding-0.6B-Q8_0"
  },
  "btnModel": {
    "start": "Start",
    "stop": "Stop",
    "delete": "Delete",
    "settings": "Settings",
    "edit": "Edit"
  },
  "codeBlock": {
    "dark": "Dark"
  },
  "toolApiKey": {
    "eye": "Eye",
    "copy": "Copy"
  },
  "btn": {
    "start": "Start",
    "stop": "Stop",
    "delete": "Delete",
    "cancel": "Cancel",
    "updateNow": "Update Now",
    "remindMeLater": "Remind me later",
    "showReleaseNotes": "Show release notes"
  },
  "toolResp": {
    "copy": "Copy",
    "delete": "Delete",
    "info": "Info",
    "regenerate": "Regenerate"
  },
  "toolSend": {
    "edit": "Edit",
    "delete": "Delete"
  },
  "partThread": {
    "recents": "Recents",
    "favorites": "Favorites"
  },
  "recentsMenu": {
    "deleteAll": "Delete All"
  },
  "favoritesMenu": {
    "unstarAll": "Unstar All"
  },
  "threadMenu": {
    "star": "Star",
    "unstar": "Unstar",
    "rename": "Rename",
    "delete": "Delete"
  },
  "title": {
    "codeBlock": "Code Block",
    "apiKey": "API Key",
    "autoUnloadOldModels": "Auto-Unload Old Models",
    "modelSettings": {
      "contextSize": "Context Size",
      "gpuLayers": "GPU Layers",
      "temperature": "Temperature",
      "topK": "Top K",
      "topP": "Top P",
      "minP": "Min P",
      "repeatLastN": "Repeat Last N",
      "repeatPenalty": "Repeat Penalty",
      "presencePenalty": "Presence Penalty",
      "frequencyPenalty": "Frequency Penalty"
    },
    "editModel": {
      "tools": "Tools",
      "vision": "Vision",
      "embeddings": "Embeddings"
    }
  },
  "notify": {
    "title": {
      "import": "Import",
      "importModel": "Import Model",
      "deleteModel": "Delete Model",
      "editMessage": "Edit Message",
      "renameThread": "Rename Thread",
      "deleteThread": "Delete Thread",
      "deleteAllThreads": "Delete All Threads",
      "allThreadsUnfavorited": "All Threads Unfavorited",
      "downloadComplete": "Download Complete"
    },
    "content": {
      "importModelSuccess": "Model {0} has been imported successfully.",
      "deleteModelSuccess": "Model {0} has been permanently deleted.",
      "editMessageSuccess": "Message edited successfully. Please wait for the model to respond.",
      "incorrectAPIKeyProvided": "Error sending message: 401 Incorrect API key provided: Invalid. You can find your API key at https://platform.openai.com/account/api-keys.",
      "renameThreadSuccess": "Thread title has been renamed to '{0}'",
      "deleteThreadSuccess": "This thread has been permanently deleted.",
      "deleteAllThreadSuccess": "All threads have been permanently deleted.",
      "allThreadsUnfavoritedSuccess": "All threads have been removed from your favorites."
    }
  },
  "ui": {
    "deleteModel": "Delete Model: ",
    "python": "Python",
    "copy": "Copy",
    "loadingModel": "Loading model...",
    "copied": "Copied!",
    "noThreadsYet": "No threads yet",
    "noThreadsYetDetail": "Start a new conversation to see your thread history here."
  },
  "compare": {
    "text1Complex": "üß† Text 1 is more complex.",
    "text2Complex": "üß† Text 2 is more complex.",
    "similar": "‚úÖ The two documents are of similar complexity."
  },
  "confidence": {
    "differenceClear": "üî• The difference is CLEAR.",
    "differenceNotHugeOne": "‚öñÔ∏è There is a difference, but not a huge one.",
    "differenceVerySmall": "ü§î The difference is very small ‚Äî almost equivalent."
  }
}
